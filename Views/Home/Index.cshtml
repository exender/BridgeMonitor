@{
    bool detail = ViewData["Detail"] != null;
    ViewData["Title"] = detail ? "Détail" : "Prochaine Fermeture";

    BoatModel boat = ViewData["Boat"] as BoatModel;

    string GetTime(DateTime time)
    {
        TimeSpan timeSpan = time.Subtract(DateTime.Now);
        return GetTimeSpan(timeSpan);
    }

    string GetTimeSpan(TimeSpan timeSpan)
    {
        return string.Format(
            "{0} ,{1} {2} et {3}",
            Pluriel(timeSpan.Days, "jour(s)"),
            Pluriel(timeSpan.Hours, "heure(s)"),
            Pluriel(timeSpan.Minutes, "minute(s)"),
            Pluriel(timeSpan.Seconds, "seconde(s)")
            );
    }

    string Pluriel(int amount, string mot)
    {
        return string.Format("{0} {1}{2}", amount, mot, amount > 1 ? "s" : "");
    }
}

<script>
    function getTimeCLose() {
        var date = new Date(toLocalDate("@boat.ClosingDate"));
        var d = getTime(date - Date.now());
        return pluriel(d.days, "jour") +
            " ," +
            pluriel(d.hours, "heure") +
            " " +
            pluriel(d.minutes, "minute") +
            " et " +
            pluriel(d.seconds, "seconde");
    }

    function getTimeReopen() {
        var date = new Date(toLocalDate("@boat.ReopeningDate"));
        var d = getTime(date - Date.now());
        return pluriel(d.days, "jour") +
            " ," +
            pluriel(d.hours, "heure") +
            " " +
            pluriel(d.minutes, "minute") +
            " et " +
            pluriel(d.seconds, "seconde");
    }

    function getTime(d) {
        var delta = d / 1000;
        var days = Math.floor(delta / 86400);
        delta -= days * 86400;
        var hours = Math.floor(delta / 3600) % 24;
        delta -= hours * 3600;
        var minutes = Math.floor(delta / 60) % 60;
        delta -= minutes * 60;
        var seconds = Math.floor(delta);

        return {
            days: days,
            hours: hours,
            minutes: minutes,
            seconds: seconds
        };
    }

    function toLocalDate(date) {
        var res = date.split("/");
        return res[1] + "/" + res[0] + "/" + res[2];
    }

    function pluriel(amount, mot) {
        return amount + " " + mot + (amount > 1 ? "s" : "");
    }
</script>

<h4 class="m-3">@(detail ? "Détail" : "Prochaine fermeture")</h4>
<div class="container-md shadow m-3">
    <div class="card">
        
        <div class="card-body">
            <div class="">
                <div class="w-25">
                    <span>Fermeture :</span>
                    <p>@boat.ClosingDate.ToString("dddd, dd MMMM yyyy HH:mm")</p>
                </div>
                <div class="w-75 d-flex justify-content-end align-items-center">
                    <span>Temps avant fermeture :</span>
                    @if (boat.ClosingDate.CompareTo(DateTime.Now) > 0)
                    {
                        <h6 id="CloseCountDown" class="ml-3">@GetTime(boat.ClosingDate)</h6>
                        <script>
                            setInterval(() => {
                                var countDown = document.getElementById("CloseCountDown");
                                countDown.innerText = getTimeCLose();
                            }, 1000);
                        </script>
                    }
                    else
                    {
                        <h6 class="">Evenement déjà passé.</h6>
                    }
                </div>
            </div>
            <div>
                <span>Temps de fermeture :</span>
                <p>@GetTimeSpan(boat.ReopeningDate.Subtract(boat.ClosingDate))</p>
            </div>
            <div class="d-flex justify-content-around">
                <div class="w-25">
                    <span>Réouverture :</span>
                    <p>@boat.ReopeningDate.ToString("dddd, dd MMMM yyyy HH:mm")</p>
                </div>
                <div class="w-75 d-flex justify-content-end  align-items-center">
                    <span>Temps avant réouverture :</span>
                    @if (boat.ClosingDate.CompareTo(DateTime.Now) > 0)
                    {
                        <h6 id="ReOpenCountDown" class="ml-3">@GetTime(boat.ReopeningDate)</h6>
                        <script>
                            setInterval(() => {
                                var countDown = document.getElementById("ReOpenCountDown");
                                countDown.innerText = getTimeReopen();
                            }, 1000);
                        </script>
                    }
                    else
                    {
                        <h6 class="">Evenement déjà passé.</h6>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

